package com.vinicius.ProjetoWebService.recursos;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.vinicius.ProjetoWebService.entidades.Usuario;
import com.vinicius.ProjetoWebService.serviços.UsuarioServiço;

@RestController
@RequestMapping(value = "/usuarios")
public class UsuarioRecursos {
	
	@Autowired
	private UsuarioServiço serviço;
	
	@GetMapping
	public ResponseEntity<List<Usuario>> buscarTodos() {
		List<Usuario> list = serviço.buscarTodos();
		
		return ResponseEntity.ok().body(list);
	}
	
	@GetMapping(value = "/{id}")
	public ResponseEntity<Usuario> buscarPorId (@PathVariable Long id) {
		Usuario usuario = serviço.buscarPorId(id);
		
		return ResponseEntity.ok().body(usuario);
	}
	
	@PostMapping
	public ResponseEntity<Usuario> inserçao (@RequestBody Usuario usuario) {
		usuario = serviço.inserçao(usuario);
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(usuario.getId()).toUri();
		
		return ResponseEntity.created(uri).body(usuario);
	}
	
	@DeleteMapping(value = "/{id}")
	public ResponseEntity<Void> deletar (@PathVariable Long id) {
		serviço.deletar(id);
		
		return ResponseEntity.noContent().build();
	}
	
	@PutMapping(value = "/{id}")
	public ResponseEntity<Usuario> atualizaçao (@PathVariable Long id, @RequestBody Usuario usuario) {
		usuario = serviço.atualizaçao(id, usuario);
		return ResponseEntity.ok().body(usuario);
	}
	
}
